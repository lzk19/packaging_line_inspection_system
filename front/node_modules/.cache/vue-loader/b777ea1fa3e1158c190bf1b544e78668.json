{"remainingRequest":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\src\\views\\ordinaryPlate\\Inspect.vue?vue&type=template&id=051947e2&scoped=true&","dependencies":[{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\src\\views\\ordinaryPlate\\Inspect.vue","mtime":1661299222721},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651901507383},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651901510183},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651901507383},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\vue-loader\\lib\\index.js","mtime":1651901509384}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}