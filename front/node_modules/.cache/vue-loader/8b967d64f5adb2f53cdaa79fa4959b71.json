{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\vue\\src\\views\\Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\vue\\src\\views\\Login.vue","mtime":1651904279749},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651901507998},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651901510113},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1651901508984},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651901507383},{"path":"C:\\Users\\Administrator\\Desktop\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1651901509384}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoud3JhcHBlciB7CiAgaGVpZ2h0OiAxMDB2aDsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tIHJpZ2h0LCAjRkM0NjZCLCAjM0Y1RUZCKTsKICBvdmVyZmxvdzogaGlkZGVuOwp9Cg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"login_container\">\n    <div class=\"login_box\">\n      <div class=\"avatar_box\">\n        <img src=\"../assets/柴犬.png\"\n             alt=\"\" />\n      </div>\n      <!-- 在规定完校验规则以后需要在表单框架中双向绑定数据，:v-model=\"login_form\" -->\n      <el-form ref=\"loginFormRef\"\n               :model=\"loginForm\"\n               class=\"login_form\"\n               label-width=\"0px\"\n               :rules=\"loginRules\">\n        <!-- 用户名 -->\n        <el-form-item prop=\"username\">\n          <el-input v-model=\"loginForm.username\"\n                    prefix-icon=\"iconfont icon-yonghu\"></el-input>\n        </el-form-item>\n        <!-- 密码 -->\n        <el-form-item prop=\"password\">\n          <el-input type=\"password\"\n                    v-model=\"loginForm.password\"\n                    prefix-icon=\"iconfont icon-mima\"></el-input>\n        </el-form-item>\n        <!-- 验证码 -->\n        <el-form-item>\n          <div style=\"display:flex\">\n            <el-input prefix-icon=\"el-icon-key\"\n                      v-model=\"loginForm.validCode\"\n                      style=\"width:50%;\"\n                      placeholder=\"请输入验证码\">\n            </el-input>\n            <ValidCode @input=\"createValidCode\"\n                       style=\"margin-left:20px;border:1px solid lightgray;\n                       border-radius:5px;height:38px;width:45%\" />\n          </div>\n        </el-form-item>\n        <!-- 按钮 -->\n        <el-form-item class=\"btns\">\n          <el-button type=\"primary\"\n                     @click=\"login\">登录</el-button>\n          <el-button type=\"info\"\n                     @click=\"resetLoginForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {setRoutes} from \"@/router\";\n\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      user: {},\n      rules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n          {min: 3, max: 10, message: '长度不小于四个字符', trigger: 'blur'}\n        ],\n        password: [\n          {required: true, message: '请输入密码', trigger: 'blur'},\n          {min: 1, max: 20, message: '长度不小于四个字符', trigger: 'blur'}\n        ],\n      }\n    }\n  },\n  methods: {\n    login() {\n      this.$refs['userForm'].validate((valid) => {\n        if (valid) {  // 表单校验合法\n          this.request.post(\"/user/login\", this.user).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"user\", JSON.stringify(res.data))  // 存储用户信息到浏览器\n              localStorage.setItem(\"menus\", JSON.stringify(res.data.menus))  // 存储用户信息到浏览器\n              // 动态设置当前用户的路由\n              setRoutes()\n              this.$message.success(\"登录成功\")\n\n              if (res.data.role === 'ROLE_STUDENT') {\n                this.$router.push(\"/front/home\")\n              } else {\n                this.$router.push(\"/\")\n              }\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style>\n.wrapper {\n  height: 100vh;\n  background-image: linear-gradient(to bottom right, #FC466B, #3F5EFB);\n  overflow: hidden;\n}\n</style>\n"]}]}