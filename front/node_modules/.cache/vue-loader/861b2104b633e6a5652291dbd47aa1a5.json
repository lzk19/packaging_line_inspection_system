{"remainingRequest":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\src\\views\\eventPlate\\Event.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\src\\views\\eventPlate\\Event.vue","mtime":1652260348851},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651901507383},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\babel-loader\\lib\\index.js","mtime":1651901509007},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651901507383},{"path":"C:\\Users\\Kocyousnb\\Desktop\\前端5.11\\node_modules\\vue-loader\\lib\\index.js","mtime":1651901509384}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAvL+i/meS4quaWueazleaYr+S4gOi/m+WFpemhtemdouWwseaYvuekuuaVsOaNrgogIGNyZWF0ZWQoKSB7CiAgICAvLyDosIPnlKjlvZPliY3nmoRnZXRVc2VyTGlzdOaWueazlQogICAgdGhpcy5nZXRFdmVudExpc3QoKTsKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1cmw6ICIiLAoKICAgICAgdHlwZU9wdGlvbnM6IFsKICAgICAgICB7CiAgICAgICAgICB2YWx1ZTogIuaTjeS9nCIsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB2YWx1ZTogIuiuvuWkhyIsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB2YWx1ZTogIuadpea6kCIsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB2YWx1ZTogIuaWueazlSIsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB2YWx1ZTogIueOr+WigyIsCiAgICAgICAgfSwKICAgICAgXSwKICAgICAgdHlwZVZhbHVlOiAiIiwKCiAgICAgIGFkZEV2ZW50RGlhbG9nVmlzaWJsZTogZmFsc2UsIC8v5re75Yqg5LqL5Lu255qE5a+56K+d5qGGCgoKICAgICAgYWRkRXZlbnRGb3JtOiB7CiAgICAgICAgbGluZTogIiIsCiAgICAgICAgZGF0ZTogIiIsCiAgICAgICAgbWFjaGluZU5hbWU6ICIiLAogICAgICAgIGV2ZW50TmFtZTogIiIsCiAgICAgIH0sCgogICAgICBldmVudExpc3Q6IFtdLCAvL+S6i+S7tuWIl+ihqAoKICAgICAgdG90YWw6IDAsIC8v5oC76K6w5b2V5pWwCgogICAgICBldmVudFF1ZXJ5SW5mbzogewogICAgICAgIHF1ZXJ5OiAiIiwgLy/mn6Xor6Lkv6Hmga8KICAgICAgICBwYWdlTnVtOiAxLCAvL+W9k+WJjemhtQogICAgICAgIHBhZ2VTaXplOiA0LCAvL+avj+mhteacgOWkp+aVsAogICAgICB9LAogICAgICBhZGRFdmVudEZvcm1SdWxlczogewogICAgICAgIGxpbmU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl57q/5Y+3IiwgdHJpZ2dlcjogImJsdXIiIH1dLAogICAgICAgIGRhdGU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5pel5pyfIiwgdHJpZ2dlcjogImJsdXIiIH1dLAogICAgICAgIG1hY2hpbmVOYW1lOiBbCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5py65Zmo5ZCN56ewIiwgdHJpZ2dlcjogImJsdXIiIH0sCiAgICAgICAgXSwKICAgICAgICBldmVudE5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICLor7fovpPlhaXkuovku7blkI3np7AiLCB0cmlnZ2VyOiAiYmx1ciIgfSwKICAgICAgICBdLAogICAgICB9LAoKICAgICAgdXBkYXRlRm9ybVJ1bGVzOiB7CiAgICAgICAgZGVzY3JpYmUxOiBbeyBtZXNzYWdlOiAi6K+36L6T5YWl5LqL5Lu25o+P6L+wIiwgdHJpZ2dlcjogImJsdXIiIH1dLAogICAgICAgIGhhcHBlblBsYWNlOiBbeyBtZXNzYWdlOiAi6K+36L6T5YWl5Y+R55Sf54K5IiwgdHJpZ2dlcjogImJsdXIiIH1dLAogICAgICAgIHJlYXNvbjogW3sgbWVzc2FnZTogIuivt+i+k+WFpeWOn+WboCIsIHRyaWdnZXI6ICJibHVyIiB9XSwKICAgICAgICBwcm9ibGVtRGVmZWN0OiBbeyBtZXNzYWdlOiAi6K+36L6T5YWl6Zeu6aKY57y66Zm3IiwgdHJpZ2dlcjogImJsdXIiIH1dLAogICAgICAgIGFjdGlvbnM6IFt7IG1lc3NhZ2U6ICLor7fovpPlhaXooYzliqgiLCB0cmlnZ2VyOiAiYmx1ciIgfV0sCiAgICAgICAgdHJhY2tzOiBbeyBtZXNzYWdlOiAi6K+36L6T5YWl6Lef6LiqIiwgdHJpZ2dlcjogImJsdXIiIH1dLAogICAgICB9LAoKICAgICAgLy/kv67mlLnnlKjmiLfkv6Hmga8KICAgICAgdXBkYXRlRm9ybToge30sCiAgICAgIC8v5pi+56S66ZqQ6JeP5L+u5pS555So5oi35qCP5a+56K+d5qGGCiAgICAgIHVwZGF0ZURpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKCiAgICAKCiAgICAvL+S4iuS8oOmZhOS7tgogICAgaGFuZGxlRmlsZVVwbG9hZFN1Y2Nlc3MocmVzKSB7CiAgICAgIHRoaXMudXBkYXRlRm9ybS5maWxlTmFtZSA9IHJlcy5uYW1lOwogICAgICB0aGlzLnVwZGF0ZUZvcm0udXJsID0gcmVzLnVybDsKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLkuIrkvKDpmYTku7bmiJDlip/vvIEiKTsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy51cGRhdGVGb3JtKTsKICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgIH0sCgogICAgLy/kuIvovb3pmYTku7YKICAgIGRvd25sb2FkRmlsZSh1cmwpIHsKICAgICAgd2luZG93Lm9wZW4odXJsKTsKICAgIH0sCgogICAgYXN5bmMgZ2V0RXZlbnRMaXN0KCkgewogICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy5yZXF1ZXN0LmdldCgiZ2V0RXZlbnRMaXN0IiwgewogICAgICAgIHBhcmFtczogdGhpcy5ldmVudFF1ZXJ5SW5mbywKICAgICAgfSk7IC8vZ2V06K+35rGC5pa55rOVCiAgICAgIHRoaXMuZXZlbnRMaXN0ID0gcmVzLmRhdGE7CiAgICAgIHRoaXMudG90YWwgPSByZXMubnVtYmVyczsKICAgIH0sCiAgICAKICAgIGFkZEV2ZW50ICgpIHsKICAgICAgdGhpcy4kcmVmcy5hZGRFdmVudEZvcm1SZWYudmFsaWRhdGUoYXN5bmMgKHZhbGlkKSA9PiB7CiAgICAgICAgaWYgKCF2YWxpZCkgcmV0dXJuOwogICAgICAgIHRoaXMucmVxdWVzdC5wb3N0KCIvYWRkRXZlbnQiLCB0aGlzLmFkZEV2ZW50Rm9ybSkudGhlbihyZXMgPT4gewogICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzIwMCcpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5paw5bu65LqL5Lu25oiQ5Yqf77yBIikKICAgICAgICAgIHRoaXMuZ2V0RXZlbnRMaXN0KCk7CiAgICAgICAgICB0aGlzLmFkZEV2ZW50RGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLmlrDlu7rkuovku7blpLHotKXvvIEiKQogICAgICAgIH0KICAgICAgfSkKICAgICAgfSk7CiAgICB9LAoKICAgIGFkZEV2ZW50RGlhbG9nQ2xvc2VkKCkgewogICAgICB0aGlzLiRyZWZzLmFkZEV2ZW50Rm9ybVJlZi5yZXNldEZpZWxkcygpOwogICAgfSwKCiAgICAvL3BhZ2VOdW3nmoTop6blj5HliqjkvZwKICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UobmV3UGFnZSkgewogICAgICB0aGlzLmV2ZW50UXVlcnlJbmZvLnBhZ2VOdW0gPSBuZXdQYWdlOwogICAgICB0aGlzLmdldEV2ZW50TGlzdCgpOwogICAgfSwKCiAgICAvL+aYvuekuuS/ruaUueeUqOaIt+S/oeaBr+eahOWvueivneahhgogICAgYXN5bmMgc2hvd1VwZGF0ZURpYWxvZyhpZCkgewogICAgICBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy5yZXF1ZXN0LmdldCgiZ2V0VXBkYXRlRXZlbnQ/aWQ9IiArIGlkKTsKICAgICAgdGhpcy51cGRhdGVGb3JtID0gcmVzOyAvL+afpeivouWHuueUqOaIt+S/oeaBr+W5tuWPjeWhq+WbnuS/ruaUueihqOWNlQogICAgICB0aGlzLnVwZGF0ZURpYWxvZ1Zpc2libGUgPSB0cnVlOyAvL+W8gOWQr+e8lui+keWvueivneahhgogICAgfSwKCiAgICAvL+WFs+mXreeql+WPowogICAgdXBkYXRlRGlhbG9nQ2xvc2VkKCkgewogICAgICB0aGlzLiRyZWZzLnVwZGF0ZUZvcm1SZWYucmVzZXRGaWVsZHMoKTsgLy/ph43nva7kv6Hmga8KICAgIH0sCgogICAgLy/noa7orqTkv67mlLkKICAgIHVwZGF0ZUV2ZW50SW5mbygpIHsKICAgICAgLy8gdGhpcy4kcmVmcy51cGRhdGVGb3JtUmVmLnZhbGlkYXRlKGFzeW5jICh2YWxpZCkgPT4gewogICAgICAvLyAgIGlmICghdmFsaWQpIHJldHVybjsgLy/pqozor4HlpLHotKUKCiAgICAgICAgdGhpcy5yZXF1ZXN0LnBvc3QoIi91cGRhdGVFdmVudCIsIHRoaXMudXBkYXRlRm9ybSkudGhlbihyZXMgPT4gewogICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAnMjAwJykgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuWujOWWhOS6i+S7tuWGheWuueaIkOWKn++8gSIpCiAgICAgICAgICAgIHRoaXMuJHJlZnNbInVwbG9hZCJdLmNsZWFyRmlsZXMoKTsKICAgICAgICAgICAgdGhpcy5nZXRFdmVudExpc3QoKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVEaWFsb2dWaXNpYmxlID0gZmFsc2U7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCLlrozlloTkuovku7blhoXlrrnlpLHotKXvvIEiKQogICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgLy8gfSk7CiAgICB9LAoKICAgIGFzeW5jIGNsb3NlRXZlbnQoaWQpIHsKICAgICAgdGhpcy5yZXF1ZXN0LmdldCgiL2dldFVwZGF0ZUV2ZW50P2lkPSIrIGlkKS50aGVuKGFzeW5jIHJlczE9PnsKICAgICAgICB0aGlzLnVwZGF0ZUZvcm0gPSByZXMxOwogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudXBkYXRlRm9ybSk7CgogICAgICAgIGlmICgKICAgICAgICB0aGlzLnVwZGF0ZUZvcm0uZGF0YS5kZXNjcmliZTEgPT0gIiIgfHwKICAgICAgICB0aGlzLnVwZGF0ZUZvcm0uZGF0YS5kZXNjcmliZTEgPT0gdW5kZWZpbmVkIHx8CiAgICAgICAgdGhpcy51cGRhdGVGb3JtLmRhdGEuZXZlbnRUeXBlID09ICIiIHx8CiAgICAgICAgdGhpcy51cGRhdGVGb3JtLmRhdGEuZXZlbnRUeXBlID09IHVuZGVmaW5lZCB8fAogICAgICAgIHRoaXMudXBkYXRlRm9ybS5kYXRhLmhhcHBlblBsYWNlID09ICIiIHx8CiAgICAgICAgdGhpcy51cGRhdGVGb3JtLmRhdGEuaGFwcGVuUGxhY2UgPT0gdW5kZWZpbmVkIHx8CiAgICAgICAgdGhpcy51cGRhdGVGb3JtLmRhdGEucmVhc29uID09ICIiIHx8CiAgICAgICAgdGhpcy51cGRhdGVGb3JtLmRhdGEucmVhc29uID09IHVuZGVmaW5lZCB8fAogICAgICAgIHRoaXMudXBkYXRlRm9ybS5kYXRhLnByb2JsZW1EZWZlY3QgPT0gIiIgfHwKICAgICAgICB0aGlzLnVwZGF0ZUZvcm0uZGF0YS5wcm9ibGVtRGVmZWN0ID09IHVuZGVmaW5lZCB8fAogICAgICAgIHRoaXMudXBkYXRlRm9ybS5kYXRhLmFjdGlvbnMgPT0gIiIgfHwKICAgICAgICB0aGlzLnVwZGF0ZUZvcm0uZGF0YS5hY3Rpb25zID09IHVuZGVmaW5lZCB8fAogICAgICAgIHRoaXMudXBkYXRlRm9ybS5kYXRhLnRyYWNrcyA9PSAiIiB8fAogICAgICAgIHRoaXMudXBkYXRlRm9ybS5kYXRhLnRyYWNrcyA9PSB1bmRlZmluZWQKICAgICAgKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuivt+WFiOWujOWWhOS6i+S7tuWGheWuuSIpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IGNvbmZpcm1SZXN1bHQgPSBhd2FpdCB0aGlzLiRjb25maXJtKAogICAgICAgICAgIuatpOaTjeS9nOWwhuWFs+mXreS6i+S7tu+8jOaYr+WQpue7p+e7re+8nyIsCiAgICAgICAgICAi5o+Q56S6IiwKICAgICAgICAgIHsKICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICLnoa7lrpoiLAogICAgICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAi5Y+W5raIIiwKICAgICAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgICAgICAgfQogICAgICAgICkuY2F0Y2goKGVycikgPT4gZXJyKTsgLy/miornu5Pmnpzkv6Hmga/mlL7ov5vkuoZjb25maXJtUmVzdWx05LitCiAgICAgICAgaWYgKGNvbmZpcm1SZXN1bHQgIT0gImNvbmZpcm0iKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy4kbWVzc2FnZS5pbmZvKCLlt7Llj5bmtojlhbPpl60iKTsKICAgICAgICB9CgogICAgICAgIHRoaXMucmVxdWVzdC5kZWxldGUoIi9kZWxldGVFdmVudD9pZD0iICsgaWQpLnRoZW4ocmVzID0+IHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcyMDAnKSB7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuWIoOmZpOaIkOWKnyIpCiAgICAgICAgICB0aGlzLmdldEV2ZW50TGlzdCgpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuWIoOmZpOWksei0pSIpCiAgICAgICAgfQogICAgICB9KQogICAgICB9CgogICAgICB9KQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Event.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Event.vue","sourceRoot":"src/views/eventPlate","sourcesContent":["<template>\n  <div>\n    <!-- 面包屑 -->\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item>巡检事件板块</el-breadcrumb-item>\n      <el-breadcrumb-item>主要设备问题</el-breadcrumb-item>\n    </el-breadcrumb>\n\n    <el-card>\n      <el-button type=\"primary\" @click=\"addEventDialogVisible = true\"\n        >新建事件</el-button>\n      <el-button type=\"primary\"\n                 @click=\"addEventDialogVisible = true\">修改事件</el-button>\n      <el-button type=\"primary\" @click=\"addEventDialogVisible = true\"\n        >合并事件</el-button\n      >\n      <el-table :data=\"eventList\" border stripe>\n        <!-- 把列的type设置成index类型就成为了索引列 -->\n        <el-table-column type=\"index\"\n                         width=\"50\"\n                         align=\"center\">\n          <template slot-scope=\"scope\">\n            <span>{{\n              (eventQueryInfo.pageNum - 1) * eventQueryInfo.pageSize + (scope.$index + 1)\n            }}</span>\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"线号\" prop=\"line\"> </el-table-column>\n        <el-table-column label=\"日期\" prop=\"date\"> </el-table-column>\n\n        <el-table-column label=\"机器名\" prop=\"machineName\"> </el-table-column>\n\n        <el-table-column label=\"事件名\" prop=\"eventName\"> </el-table-column>\n        <el-table-column label=\"事件类型\" prop=\"eventType\"> </el-table-column>\n        <el-table-column label=\"附件\" prop=\"fileName\"> </el-table-column>\n        <el-table-column label=\"事件操作\" width=\"180px\">\n          <!-- scope里封存了该行用户的所有信息 -->\n          <template slot-scope=\"scope\">\n            <!-- 填写事件内容按钮 -->\n\n            <el-tooltip content=\"填写事件内容\" placement=\"top\" effect=\"light\">\n              <el-button\n                type=\"primary\"\n                icon=\"el-icon-edit\"\n                plain\n                round\n                size=\"mini\"\n                @click=\"showUpdateDialog(scope.row.id)\"\n              ></el-button>\n            </el-tooltip>\n\n            <el-tooltip content=\"下载附件\" placement=\"top\" effect=\"light\">\n              <el-button\n                type=\"success\"\n                icon=\"el-icon-download\"\n                plain\n                round\n                size=\"mini\"\n                @click=\"downloadFile(scope.row.url)\"\n              ></el-button>\n            </el-tooltip>\n\n            <!-- 事件关闭按钮 -->\n            <el-tooltip content=\"关闭事件\" placement=\"top\" effect=\"light\">\n              <el-button\n                type=\"danger\"\n                icon=\"el-icon-delete\"\n                round\n                plain\n                size=\"mini\"\n                @click=\"closeEvent(scope.row.id)\"\n              ></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- element分页组件 没有设置每页最大变化数 current-page：当前页 page-size表示每页最大数据条数 total表示总数据数-->\n      <!-- 分页 -->\n      <el-pagination\n        @current-change=\"handleCurrentChange\"\n        :current-page.sync=\"eventQueryInfo.pageNum\"\n        :page-size=\"eventQueryInfo.pageSize\"\n        layout=\"total, prev, pager, next,jumper\"\n        :total=\"total\"\n      >\n      </el-pagination>\n    </el-card>\n\n    <!-- 新增事件区域 visible:表示是否显示对话框  @close关闭tag时触发的事件-->\n    <el-dialog\n      title=\"添加事件\"\n      :visible.sync=\"addEventDialogVisible\"\n      width=\"40%\"\n      @close=\"addEventDialogClosed\"\n      v-dialogDrag\n    >\n      <!--red:校验规则的内容 存放在addFormRef下 -->\n      <!-- 添加用户对话框里的表单内容 -->\n      <el-form\n        :model=\"addEventForm\"\n        :rules=\"addEventFormRules\"\n        ref=\"addEventFormRef\"\n        label-width=\"80px\"\n      >\n        <!-- 机器名称 -->\n        <el-form-item label=\"线号\" prop=\"line\">\n          <el-input v-model=\"addEventForm.line\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"日期\" prop=\"date\">\n          <el-input v-model=\"addEventForm.date\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"机器名称\" prop=\"machineName\">\n          <el-input v-model=\"addEventForm.machineName\"></el-input>\n        </el-form-item>\n        <!-- 事件名称 -->\n        <el-form-item label=\"事件名称\" prop=\"eventName\">\n          <el-input v-model=\"addEventForm.eventName\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!-- 表单底部按钮 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"addEventDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"addEvent\">确定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 填写事件内容的对话框 -->\n    <el-dialog\n      title=\"填写事件内容\"\n      :visible.sync=\"updateDialogVisible\"\n      width=\"42%\"\n      @close=\"updateDialogClosed\"\n      v-dialogDrag\n    >\n      <!--ref:校验规则的内容 updateForm -->\n      <!-- 填写事件内容对话框里的表单内容 -->\n      <el-form\n        :model=\"updateForm\"\n        :rules=\"updateFormRules\"\n        ref=\"updateFormRef\"\n        label-width=\"70px\"\n      >\n        <!-- 类型 -->\n        <el-form-item label=\"类型\" prop=\"eventType\">\n          <el-select\n            v-model=\"updateForm.eventType\"\n            placeholder=\"请选择事件类型\"\n            style=\"width: 160px\"\n          >\n            <el-option\n              v-for=\"item in typeOptions\"\n              :key=\"item.value\"\n              :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <!-- 描述 -->\n        <el-form-item label=\"描述\" prop=\"describe1\">\n          <el-input type=\"textarea\" v-model=\"updateForm.describe1\"></el-input>\n        </el-form-item>\n        <!-- 发生点 -->\n        <el-form-item label=\"地点\" prop=\"happenPlace\">\n          <el-input type=\"textarea\" v-model=\"updateForm.happenPlace\"></el-input>\n        </el-form-item>\n        <!-- 原因 -->\n        <el-form-item label=\"原因\" prop=\"reason\">\n          <el-input type=\"textarea\" v-model=\"updateForm.reason\"></el-input>\n        </el-form-item>\n        <!-- 问题缺陷 -->\n        <el-form-item label=\"缺陷\" prop=\"problemDefect\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"updateForm.problemDefect\"\n          ></el-input>\n        </el-form-item>\n        <!-- 行动 -->\n        <el-form-item label=\"行动\" prop=\"actions\">\n          <el-input type=\"textarea\" v-model=\"updateForm.actions\"></el-input>\n        </el-form-item>\n        <!-- 跟踪 -->\n        <el-form-item label=\"跟踪\" prop=\"tracks\">\n          <el-input type=\"textarea\" v-model=\"updateForm.tracks\"></el-input>\n        </el-form-item>\n\n        <!-- 上传文件 -->\n\n        <el-form-item>\n          <el-upload\n            :action=\"'http://localhost:9090/file/uploadFile'\"\n            :on-success=\"handleFileUploadSuccess\"\n            ref=\"upload\"\n          >\n            <el-button type=\"success\" class=\"upload\">上传附件</el-button>\n          </el-upload>\n        </el-form-item>\n      </el-form>\n      <!-- 表单底部按钮 -->\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"updateDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"updateEventInfo\">确定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  //这个方法是一进入页面就显示数据\n  created() {\n    // 调用当前的getUserList方法\n    this.getEventList();\n  },\n  data() {\n    return {\n      url: \"\",\n\n      typeOptions: [\n        {\n          value: \"操作\",\n        },\n        {\n          value: \"设备\",\n        },\n        {\n          value: \"来源\",\n        },\n        {\n          value: \"方法\",\n        },\n        {\n          value: \"环境\",\n        },\n      ],\n      typeValue: \"\",\n\n      addEventDialogVisible: false, //添加事件的对话框\n\n\n      addEventForm: {\n        line: \"\",\n        date: \"\",\n        machineName: \"\",\n        eventName: \"\",\n      },\n\n      eventList: [], //事件列表\n\n      total: 0, //总记录数\n\n      eventQueryInfo: {\n        query: \"\", //查询信息\n        pageNum: 1, //当前页\n        pageSize: 4, //每页最大数\n      },\n      addEventFormRules: {\n        line: [{ required: true, message: \"请输入线号\", trigger: \"blur\" }],\n        date: [{ required: true, message: \"请输入日期\", trigger: \"blur\" }],\n        machineName: [\n          { required: true, message: \"请输入机器名称\", trigger: \"blur\" },\n        ],\n        eventName: [\n          { required: true, message: \"请输入事件名称\", trigger: \"blur\" },\n        ],\n      },\n\n      updateFormRules: {\n        describe1: [{ message: \"请输入事件描述\", trigger: \"blur\" }],\n        happenPlace: [{ message: \"请输入发生点\", trigger: \"blur\" }],\n        reason: [{ message: \"请输入原因\", trigger: \"blur\" }],\n        problemDefect: [{ message: \"请输入问题缺陷\", trigger: \"blur\" }],\n        actions: [{ message: \"请输入行动\", trigger: \"blur\" }],\n        tracks: [{ message: \"请输入跟踪\", trigger: \"blur\" }],\n      },\n\n      //修改用户信息\n      updateForm: {},\n      //显示隐藏修改用户栏对话框\n      updateDialogVisible: false,\n    };\n  },\n  methods: {\n\n    \n\n    //上传附件\n    handleFileUploadSuccess(res) {\n      this.updateForm.fileName = res.name;\n      this.updateForm.url = res.url;\n      this.$message.success(\"上传附件成功！\");\n      // console.log(this.updateForm);\n      console.log(res);\n    },\n\n    //下载附件\n    downloadFile(url) {\n      window.open(url);\n    },\n\n    async getEventList() {\n      const { data: res } = await this.request.get(\"getEventList\", {\n        params: this.eventQueryInfo,\n      }); //get请求方法\n      this.eventList = res.data;\n      this.total = res.numbers;\n    },\n    \n    addEvent () {\n      this.$refs.addEventFormRef.validate(async (valid) => {\n        if (!valid) return;\n        this.request.post(\"/addEvent\", this.addEventForm).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"新建事件成功！\")\n          this.getEventList();\n          this.addEventDialogVisible = false;\n        } else {\n          this.$message.error(\"新建事件失败！\")\n        }\n      })\n      });\n    },\n\n    addEventDialogClosed() {\n      this.$refs.addEventFormRef.resetFields();\n    },\n\n    //pageNum的触发动作\n    handleCurrentChange(newPage) {\n      this.eventQueryInfo.pageNum = newPage;\n      this.getEventList();\n    },\n\n    //显示修改用户信息的对话框\n    async showUpdateDialog(id) {\n      const { data: res } = await this.request.get(\"getUpdateEvent?id=\" + id);\n      this.updateForm = res; //查询出用户信息并反填回修改表单\n      this.updateDialogVisible = true; //开启编辑对话框\n    },\n\n    //关闭窗口\n    updateDialogClosed() {\n      this.$refs.updateFormRef.resetFields(); //重置信息\n    },\n\n    //确认修改\n    updateEventInfo() {\n      // this.$refs.updateFormRef.validate(async (valid) => {\n      //   if (!valid) return; //验证失败\n\n        this.request.post(\"/updateEvent\", this.updateForm).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"完善事件内容成功！\")\n            this.$refs[\"upload\"].clearFiles();\n            this.getEventList();\n            this.updateDialogVisible = false;\n          } else {\n            this.$message.error(\"完善事件内容失败！\")\n          }\n          })\n      // });\n    },\n\n    async closeEvent(id) {\n      this.request.get(\"/getUpdateEvent?id=\"+ id).then(async res1=>{\n        this.updateForm = res1;\n        // console.log(this.updateForm);\n\n        if (\n        this.updateForm.data.describe1 == \"\" ||\n        this.updateForm.data.describe1 == undefined ||\n        this.updateForm.data.eventType == \"\" ||\n        this.updateForm.data.eventType == undefined ||\n        this.updateForm.data.happenPlace == \"\" ||\n        this.updateForm.data.happenPlace == undefined ||\n        this.updateForm.data.reason == \"\" ||\n        this.updateForm.data.reason == undefined ||\n        this.updateForm.data.problemDefect == \"\" ||\n        this.updateForm.data.problemDefect == undefined ||\n        this.updateForm.data.actions == \"\" ||\n        this.updateForm.data.actions == undefined ||\n        this.updateForm.data.tracks == \"\" ||\n        this.updateForm.data.tracks == undefined\n      ) {\n        return this.$message.error(\"请先完善事件内容\");\n      } else {\n        const confirmResult = await this.$confirm(\n          \"此操作将关闭事件，是否继续？\",\n          \"提示\",\n          {\n            confirmButtonText: \"确定\",\n            cancelButtonText: \"取消\",\n            type: \"warning\",\n          }\n        ).catch((err) => err); //把结果信息放进了confirmResult中\n        if (confirmResult != \"confirm\") {\n          return this.$message.info(\"已取消关闭\");\n        }\n\n        this.request.delete(\"/deleteEvent?id=\" + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"删除成功\")\n          this.getEventList()\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      })\n      }\n\n      })\n    },\n  },\n};\n</script>\n\n<style lang=\"less\" scoped>\n.el-table {\n  margin-top: 15px;\n  font-size: 15px;\n}\n\n.upload {\n  width: 150px;\n}\n</style>\n"]}]}